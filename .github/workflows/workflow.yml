name: CI
on:
  push:
    branches: [ "master", "stage" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install requirements
        run: yarn --cwd skills-search-tram-frontend install
      - name: Check pre-commit
        uses: pre-commit/action@v3.0.1

  build-front:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install requirements
        run: yarn --cwd skills-search-tram-frontend install
      - name: Build front archive
        run: make build_frontend
      - name: Upload front archive
        uses: actions/upload-artifact@v4
        with:
          name: arrive
          path: arrive.zip
          retention-days: 1

  deploy-front:
    if: ${{ github.ref_name == 'stage' || github.ref_name == 'master' }}
    needs: [ lint, build-front ]
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}-front
    steps:
      - name: Download front archive
        uses: actions/download-artifact@v4
        with:
          name: arrive
          path: arrive.zip

      - name: Upload archive to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "arrive.zip"
          target: "/tmp"

      - name: Deploy on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Установим unzip, zip, rsync
            sudo apt install unzip zip rsync -y
            # Создаем временную директорию для распаковки
            mkdir -p /tmp/arrive
            # Распаковываем архив
            unzip -o /tmp/arrive.zip/arrive.zip -d /tmp/arrive
            # Перемещаем содержимое папки out в целевую директорию
            sudo rsync -av --delete /tmp/arrive/out/ ${{ secrets.DEPLOY_PATH }}
            rm -rf arrive*
